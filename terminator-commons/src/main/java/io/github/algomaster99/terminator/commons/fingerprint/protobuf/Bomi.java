// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Bomi.proto

// Protobuf Java Version: 4.26.1
package io.github.algomaster99.terminator.commons.fingerprint.protobuf;

/**
 * Protobuf type {@code io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi}
 */
public final class Bomi extends com.google.protobuf.GeneratedMessage
        implements
        // @@protoc_insertion_point(message_implements:io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi)
        BomiOrBuilder {
    private static final long serialVersionUID = 0L;

    static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
                com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
                /* major= */ 4,
                /* minor= */ 26,
                /* patch= */ 1,
                /* suffix= */ "",
                Bomi.class.getName());
    }
    // Use Bomi.newBuilder() to construct.
    private Bomi(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
    }

    private Bomi() {
        classFile_ = java.util.Collections.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
        return io.github.algomaster99.terminator.commons.fingerprint.protobuf.BomiProto
                .internal_static_io_github_algomaster99_terminator_commons_fingerprint_protobuf_Bomi_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
        return io.github.algomaster99.terminator.commons.fingerprint.protobuf.BomiProto
                .internal_static_io_github_algomaster99_terminator_commons_fingerprint_protobuf_Bomi_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi.class,
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi.Builder.class);
    }

    public static final int CLASSFILE_FIELD_NUMBER = 1;

    @SuppressWarnings("serial")
    private java.util.List<io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile> classFile_;
    /**
     * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
     */
    @java.lang.Override
    public java.util.List<io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile> getClassFileList() {
        return classFile_;
    }
    /**
     * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFileOrBuilder>
            getClassFileOrBuilderList() {
        return classFile_;
    }
    /**
     * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
     */
    @java.lang.Override
    public int getClassFileCount() {
        return classFile_.size();
    }
    /**
     * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
     */
    @java.lang.Override
    public io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile getClassFile(int index) {
        return classFile_.get(index);
    }
    /**
     * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
     */
    @java.lang.Override
    public io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFileOrBuilder getClassFileOrBuilder(
            int index) {
        return classFile_.get(index);
    }

    private byte memoizedIsInitialized = -1;

    @java.lang.Override
    public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        for (int i = 0; i < getClassFileCount(); i++) {
            if (!getClassFile(i).isInitialized()) {
                memoizedIsInitialized = 0;
                return false;
            }
        }
        memoizedIsInitialized = 1;
        return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output) throws java.io.IOException {
        for (int i = 0; i < classFile_.size(); i++) {
            output.writeMessage(1, classFile_.get(i));
        }
        getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        for (int i = 0; i < classFile_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream.computeMessageSize(1, classFile_.get(i));
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
            return true;
        }
        if (!(obj instanceof io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi)) {
            return super.equals(obj);
        }
        io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi other =
                (io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi) obj;

        if (!getClassFileList().equals(other.getClassFileList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
    }

    @java.lang.Override
    public int hashCode() {
        if (memoizedHashCode != 0) {
            return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getClassFileCount() > 0) {
            hash = (37 * hash) + CLASSFILE_FIELD_NUMBER;
            hash = (53 * hash) + getClassFileList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            java.nio.ByteBuffer data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            java.nio.ByteBuffer data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            com.google.protobuf.ByteString data) throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            com.google.protobuf.ByteString data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            byte[] data, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage.parseWithIOException(PARSER, input);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage.parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseDelimitedFrom(
            java.io.InputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage.parseDelimitedWithIOException(PARSER, input);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseDelimitedFrom(
            java.io.InputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage.parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            com.google.protobuf.CodedInputStream input) throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage.parseWithIOException(PARSER, input);
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi parseFrom(
            com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage.parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() {
        return newBuilder();
    }

    public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
    }

    public static Builder newBuilder(io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    @java.lang.Override
    public Builder toBuilder() {
        return this == DEFAULT_INSTANCE ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
    }
    /**
     * Protobuf type {@code io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi}
     */
    public static final class Builder extends com.google.protobuf.GeneratedMessage.Builder<Builder>
            implements
            // @@protoc_insertion_point(builder_implements:io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi)
            io.github.algomaster99.terminator.commons.fingerprint.protobuf.BomiOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor getDescriptor() {
            return io.github.algomaster99.terminator.commons.fingerprint.protobuf.BomiProto
                    .internal_static_io_github_algomaster99_terminator_commons_fingerprint_protobuf_Bomi_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable internalGetFieldAccessorTable() {
            return io.github.algomaster99.terminator.commons.fingerprint.protobuf.BomiProto
                    .internal_static_io_github_algomaster99_terminator_commons_fingerprint_protobuf_Bomi_fieldAccessorTable
                    .ensureFieldAccessorsInitialized(
                            io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi.class,
                            io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi.Builder.class);
        }

        // Construct using io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi.newBuilder()
        private Builder() {}

        private Builder(com.google.protobuf.GeneratedMessage.BuilderParent parent) {
            super(parent);
        }

        @java.lang.Override
        public Builder clear() {
            super.clear();
            bitField0_ = 0;
            if (classFileBuilder_ == null) {
                classFile_ = java.util.Collections.emptyList();
            } else {
                classFile_ = null;
                classFileBuilder_.clear();
            }
            bitField0_ = (bitField0_ & ~0x00000001);
            return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor getDescriptorForType() {
            return io.github.algomaster99.terminator.commons.fingerprint.protobuf.BomiProto
                    .internal_static_io_github_algomaster99_terminator_commons_fingerprint_protobuf_Bomi_descriptor;
        }

        @java.lang.Override
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi getDefaultInstanceForType() {
            return io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi.getDefaultInstance();
        }

        @java.lang.Override
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi build() {
            io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi result = buildPartial();
            if (!result.isInitialized()) {
                throw newUninitializedMessageException(result);
            }
            return result;
        }

        @java.lang.Override
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi buildPartial() {
            io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi result =
                    new io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi(this);
            buildPartialRepeatedFields(result);
            if (bitField0_ != 0) {
                buildPartial0(result);
            }
            onBuilt();
            return result;
        }

        private void buildPartialRepeatedFields(
                io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi result) {
            if (classFileBuilder_ == null) {
                if (((bitField0_ & 0x00000001) != 0)) {
                    classFile_ = java.util.Collections.unmodifiableList(classFile_);
                    bitField0_ = (bitField0_ & ~0x00000001);
                }
                result.classFile_ = classFile_;
            } else {
                result.classFile_ = classFileBuilder_.build();
            }
        }

        private void buildPartial0(io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi result) {
            int from_bitField0_ = bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi) {
                return mergeFrom((io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi) other);
            } else {
                super.mergeFrom(other);
                return this;
            }
        }

        public Builder mergeFrom(io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi other) {
            if (other == io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi.getDefaultInstance())
                return this;
            if (classFileBuilder_ == null) {
                if (!other.classFile_.isEmpty()) {
                    if (classFile_.isEmpty()) {
                        classFile_ = other.classFile_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                    } else {
                        ensureClassFileIsMutable();
                        classFile_.addAll(other.classFile_);
                    }
                    onChanged();
                }
            } else {
                if (!other.classFile_.isEmpty()) {
                    if (classFileBuilder_.isEmpty()) {
                        classFileBuilder_.dispose();
                        classFileBuilder_ = null;
                        classFile_ = other.classFile_;
                        bitField0_ = (bitField0_ & ~0x00000001);
                        classFileBuilder_ = com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders
                                ? getClassFileFieldBuilder()
                                : null;
                    } else {
                        classFileBuilder_.addAllMessages(other.classFile_);
                    }
                }
            }
            this.mergeUnknownFields(other.getUnknownFields());
            onChanged();
            return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
            for (int i = 0; i < getClassFileCount(); i++) {
                if (!getClassFile(i).isInitialized()) {
                    return false;
                }
            }
            return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
                com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws java.io.IOException {
            if (extensionRegistry == null) {
                throw new java.lang.NullPointerException();
            }
            try {
                boolean done = false;
                while (!done) {
                    int tag = input.readTag();
                    switch (tag) {
                        case 0:
                            done = true;
                            break;
                        case 10: {
                            io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile m =
                                    input.readMessage(
                                            io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile
                                                    .parser(),
                                            extensionRegistry);
                            if (classFileBuilder_ == null) {
                                ensureClassFileIsMutable();
                                classFile_.add(m);
                            } else {
                                classFileBuilder_.addMessage(m);
                            }
                            break;
                        } // case 10
                        default: {
                            if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                                done = true; // was an endgroup tag
                            }
                            break;
                        } // default:
                    } // switch (tag)
                } // while (!done)
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.unwrapIOException();
            } finally {
                onChanged();
            } // finally
            return this;
        }

        private int bitField0_;

        private java.util.List<io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile> classFile_ =
                java.util.Collections.emptyList();

        private void ensureClassFileIsMutable() {
            if (!((bitField0_ & 0x00000001) != 0)) {
                classFile_ = new java.util.ArrayList<
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile>(classFile_);
                bitField0_ |= 0x00000001;
            }
        }

        private com.google.protobuf.RepeatedFieldBuilder<
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile,
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder,
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFileOrBuilder>
                classFileBuilder_;

        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public java.util.List<io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile>
                getClassFileList() {
            if (classFileBuilder_ == null) {
                return java.util.Collections.unmodifiableList(classFile_);
            } else {
                return classFileBuilder_.getMessageList();
            }
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public int getClassFileCount() {
            if (classFileBuilder_ == null) {
                return classFile_.size();
            } else {
                return classFileBuilder_.getCount();
            }
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile getClassFile(int index) {
            if (classFileBuilder_ == null) {
                return classFile_.get(index);
            } else {
                return classFileBuilder_.getMessage(index);
            }
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder setClassFile(
                int index, io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile value) {
            if (classFileBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureClassFileIsMutable();
                classFile_.set(index, value);
                onChanged();
            } else {
                classFileBuilder_.setMessage(index, value);
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder setClassFile(
                int index,
                io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder builderForValue) {
            if (classFileBuilder_ == null) {
                ensureClassFileIsMutable();
                classFile_.set(index, builderForValue.build());
                onChanged();
            } else {
                classFileBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder addClassFile(io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile value) {
            if (classFileBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureClassFileIsMutable();
                classFile_.add(value);
                onChanged();
            } else {
                classFileBuilder_.addMessage(value);
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder addClassFile(
                int index, io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile value) {
            if (classFileBuilder_ == null) {
                if (value == null) {
                    throw new NullPointerException();
                }
                ensureClassFileIsMutable();
                classFile_.add(index, value);
                onChanged();
            } else {
                classFileBuilder_.addMessage(index, value);
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder addClassFile(
                io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder builderForValue) {
            if (classFileBuilder_ == null) {
                ensureClassFileIsMutable();
                classFile_.add(builderForValue.build());
                onChanged();
            } else {
                classFileBuilder_.addMessage(builderForValue.build());
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder addClassFile(
                int index,
                io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder builderForValue) {
            if (classFileBuilder_ == null) {
                ensureClassFileIsMutable();
                classFile_.add(index, builderForValue.build());
                onChanged();
            } else {
                classFileBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder addAllClassFile(
                java.lang.Iterable<? extends io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile>
                        values) {
            if (classFileBuilder_ == null) {
                ensureClassFileIsMutable();
                com.google.protobuf.AbstractMessageLite.Builder.addAll(values, classFile_);
                onChanged();
            } else {
                classFileBuilder_.addAllMessages(values);
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder clearClassFile() {
            if (classFileBuilder_ == null) {
                classFile_ = java.util.Collections.emptyList();
                bitField0_ = (bitField0_ & ~0x00000001);
                onChanged();
            } else {
                classFileBuilder_.clear();
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public Builder removeClassFile(int index) {
            if (classFileBuilder_ == null) {
                ensureClassFileIsMutable();
                classFile_.remove(index);
                onChanged();
            } else {
                classFileBuilder_.remove(index);
            }
            return this;
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder getClassFileBuilder(
                int index) {
            return getClassFileFieldBuilder().getBuilder(index);
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFileOrBuilder getClassFileOrBuilder(
                int index) {
            if (classFileBuilder_ == null) {
                return classFile_.get(index);
            } else {
                return classFileBuilder_.getMessageOrBuilder(index);
            }
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public java.util.List<
                        ? extends io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFileOrBuilder>
                getClassFileOrBuilderList() {
            if (classFileBuilder_ != null) {
                return classFileBuilder_.getMessageOrBuilderList();
            } else {
                return java.util.Collections.unmodifiableList(classFile_);
            }
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder addClassFileBuilder() {
            return getClassFileFieldBuilder()
                    .addBuilder(
                            io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile
                                    .getDefaultInstance());
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder addClassFileBuilder(
                int index) {
            return getClassFileFieldBuilder()
                    .addBuilder(
                            index,
                            io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile
                                    .getDefaultInstance());
        }
        /**
         * <code>repeated .io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile classFile = 1;</code>
         */
        public java.util.List<io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder>
                getClassFileBuilderList() {
            return getClassFileFieldBuilder().getBuilderList();
        }

        private com.google.protobuf.RepeatedFieldBuilder<
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile,
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder,
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFileOrBuilder>
                getClassFileFieldBuilder() {
            if (classFileBuilder_ == null) {
                classFileBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile,
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFile.Builder,
                        io.github.algomaster99.terminator.commons.fingerprint.protobuf.ClassFileOrBuilder>(
                        classFile_, ((bitField0_ & 0x00000001) != 0), getParentForChildren(), isClean());
                classFile_ = null;
            }
            return classFileBuilder_;
        }

        // @@protoc_insertion_point(builder_scope:io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi)
    }

    // @@protoc_insertion_point(class_scope:io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi)
    private static final io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi DEFAULT_INSTANCE;

    static {
        DEFAULT_INSTANCE = new io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi();
    }

    public static io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi getDefaultInstance() {
        return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Bomi> PARSER = new com.google.protobuf.AbstractParser<Bomi>() {
        @java.lang.Override
        public Bomi parsePartialFrom(
                com.google.protobuf.CodedInputStream input, com.google.protobuf.ExtensionRegistryLite extensionRegistry)
                throws com.google.protobuf.InvalidProtocolBufferException {
            Builder builder = newBuilder();
            try {
                builder.mergeFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
                throw e.setUnfinishedMessage(builder.buildPartial());
            } catch (com.google.protobuf.UninitializedMessageException e) {
                throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
            } catch (java.io.IOException e) {
                throw new com.google.protobuf.InvalidProtocolBufferException(e)
                        .setUnfinishedMessage(builder.buildPartial());
            }
            return builder.buildPartial();
        }
    };

    public static com.google.protobuf.Parser<Bomi> parser() {
        return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Bomi> getParserForType() {
        return PARSER;
    }

    @java.lang.Override
    public io.github.algomaster99.terminator.commons.fingerprint.protobuf.Bomi getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
    }
}
